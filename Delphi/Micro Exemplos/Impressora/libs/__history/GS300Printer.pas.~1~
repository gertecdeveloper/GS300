unit GS300Printer;

interface

uses

  GS300Interfaces,
  uFuncoes,

  System.SysUtils, System.UITypes, System.Classes,
  System.Variants, FMX.Graphics, FMX.Dialogs, System.Threading,
  FMX.Helpers.Android, FMX.Surfaces, FMX.FontGlyphs,
  Androidapi.JNI.GraphicsContentViewText, System.IOUtils, Androidapi.Helpers,
  Androidapi.JNI.App, AndroidAPI.JNIBridge, Androidapi.JNI.JavaTypes;

type

  T_ALINHAMENTO   = (ESQUERDA, CENTRO, DIREITA);
  T_TAMANHO_PAPEL = (PAPER58, PAPER80);
  T_TIPO_BARCODE  = (UPCA, UPCE, EAN13, EAN8, CODE39, ITF, CODABAR, CODE93, CODE128A, CODE128B, CODE128C);

  TGEDIPrinter = class
  private
    { private declarations }

  protected
    { protected declarations }
  public

    { public declarations }

    printInitFlag: integer;
    iPRNTR: JAP80PrintHelper;
    aguardarComandoDeImpressao: boolean;

    procedure printInit;
    procedure aguardarComandoImpressao(value:boolean);

    procedure imprimirTexto(strPrint: string; fontSize: Integer = 32; textStyle: Integer = 0; isUnderLine: Boolean = false; alignment: integer = 1; paperWidth: Integer = 80; linespace: integer = 0);
    procedure imprimirCodigoDeBarras(strPrint: string; tipoQrCode: integer; altura: Integer; largura:Integer; alinhamento: Integer; posicao: integer  );
    procedure imprimirQRCode(strPrint: string; fontSize: Integer = 32; alignment: integer = 1 );
    procedure avancarLinha(linhas: integer=1);
    procedure cortarPapel();
    procedure imprimirImagem(Imagem:TBitmap);
    procedure iniciarImpressao;

    constructor Create;

  end;

var
  GertecPrinter: TGEDIPrinter;
  aTask: ITask;

implementation

procedure TGEDIPrinter.printInit;
begin

  if (printInitFlag = 0) then
    iPRNTR.initPrint(TAndroidHelper.Activity);

  printInitFlag := 1;

end;

procedure TGEDIPrinter.aguardarComandoImpressao(value:boolean);
begin
  aguardarComandoDeImpressao := value;
end;

procedure TGEDIPrinter.imprimirTexto(
  strPrint: string;
  fontSize: Integer = 32;
  textStyle: Integer = 0;
  isUnderLine: Boolean = false;
  alignment: integer = 1;
  paperWidth: Integer = 80;
  linespace: integer = 0
);
begin

  iPRNTR.printData(StringToJString(strPrint), fontSize, textStyle, isUnderLine, alignment, paperWidth, linespace);

  if aguardarComandoDeImpressao=false then
    iPRNTR.printStart;

end;


procedure TGEDIPrinter.imprimirCodigoDeBarras(
  strPrint: string;
  tipoQrCode: integer;
  altura: Integer;
  largura:Integer;
  alinhamento: Integer;
  posicao: integer
);
begin

  iPRNTR.printBarCode(StringToJString(strPrint), tipoQrCode, altura, largura, alinhamento, posicao );

  if aguardarComandoDeImpressao=false then
    iPRNTR.printStart;

end;

procedure TGEDIPrinter.imprimirQRCode(
  strPrint: string;
  fontSize: Integer = 32;
  alignment: integer = 1
);
begin

  iPRNTR.printQRCode(StringToJString(strPrint), fontSize, alignment );

  if aguardarComandoDeImpressao=false then
    iPRNTR.printStart;

end;

procedure TGEDIPrinter.avancarLinha(
  linhas: integer=1
);
var
  vLinhas: integer;
begin

  for vLinhas := 1 to linhas do
    iPRNTR.printData(StringToJString(' '), 32, 0, false, 1, 80, 0);

  if aguardarComandoDeImpressao=false then
    iPRNTR.printStart;

end;

procedure TGEDIPrinter.cortarPapel();
begin

  iPRNTR.cutPaper(1);

  if aguardarComandoDeImpressao=false then
    iPRNTR.printStart;

end;

procedure TGEDIPrinter.imprimirImagem(Imagem:TBitmap);
begin

  iPRNTR.printBitmap(BitmapToJBitmap(Imagem), 1, 80);

  if aguardarComandoDeImpressao=false then
    iPRNTR.printStart;

end;

procedure TGEDIPrinter.iniciarImpressao;
begin

  iPRNTR.printStart;

end;

constructor TGEDIPrinter.Create;
begin

  aguardarComandoDeImpressao := false;

end;

initialization
  GertecPrinter := TGEDIPrinter.Create;
  GertecPrinter.printInitFlag := 0;

  aTask := TTask.Create(
    procedure()
    begin
      GertecPrinter.iPRNTR := TJAP80PrintHelper.JavaClass.getInstance;
      GertecPrinter.printInit;
    end);

  aTask.Start;

end.

